name: Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch: # Allows manual triggering

jobs:
  bump_version:
    runs-on: ubuntu-latest
    # This job only runs for pushes to main, not for tags or bot commits
    if: github.ref == 'refs/heads/main' && github.actor != 'github-actions[bot]'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'

      - name: Bump version
        id: bump
        run: |
          file=Directory.Build.props
          version=$(grep -oP '(?<=<VersionPrefix>).*?(?=</VersionPrefix>)' "$file")
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          sed -i "s/<VersionPrefix>$version<\/VersionPrefix>/<VersionPrefix>$new_version<\/VersionPrefix>/" "$file"
          echo "new_version=$new_version" >> "$GITHUB_OUTPUT"

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Directory.Build.props
          git commit -m "chore: bump version to ${{ steps.bump.outputs.new_version }}"
          git push

  tag_release:
    runs-on: ubuntu-latest
    # This job only runs when manually dispatched
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: |
          file=Directory.Build.props
          version=$(grep -oP '(?<=<VersionPrefix>).*?(?=</VersionPrefix>)' "$file")
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Create Git Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"

  publish:
    runs-on: ubuntu-latest
    needs: [bump_version, tag_release] # Depends on the other jobs
    # This job only runs for pushes to tags
    if: always() && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Pack project
        run: dotnet pack src/Game/ProjectGeoShot.Game.csproj -c Release -o ../../nupkgs

      - name: Publish to GitHub Packages
        run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "https://nuget.pkg.github.com/andrewboudreau/index.json" --skip-duplicate

      - name: Publish to NuGet.org
        run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
